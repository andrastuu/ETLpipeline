services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - postgres
    environment:
      PYTHONPATH: /opt/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: '0Afr6FPJJFXeAj5LrLeE5vlOwvoaZpYsn8pDOkeSwBg='
      AIRFLOW__WEBSERVER__SECRET_KEY: '46U2ll92R2s-Jh1Got7IIA'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__WEBSERVER__DEFAULT_USER: airflow
      AIRFLOW__WEBSERVER__DEFAULT_PASSWORD: airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./etl:/opt/airflow/etl
      - ./data:/opt/airflow/data
      - ./output:/opt/airflow/output
      - .:/opt/airflow
    ports:
      - "8080:8080"
    command: webserver

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - airflow-webserver
    environment:
      PYTHONPATH: /opt/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: '46U2ll92R2s-Jh1Got7IIA'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./etl:/opt/airflow/etl
      - ./data:/opt/airflow/data
      - ./output:/opt/airflow/output
    command: scheduler

volumes:
  postgres-db-volume:
